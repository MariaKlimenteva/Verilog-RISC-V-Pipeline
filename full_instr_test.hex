// addi x1, x0, 10
0x00a00093

// addi x2, x0, 20       # x2 = 20
0x01400113

// addi x3, x0, 100      # x3 = 100 
0x06400193

// nop; nop; nop; nop; nop; nop
00000013
00000013
00000013
00000013
00000013
00000013
00000013

// R-type Test
// add x5, x1, x2        # x5 = 10 + 20 = 30
0x002082b3

// nop; nop; nop; nop; nop; nop
00000013
00000013
00000013
00000013
00000013
00000013
00000013

// sub x6, x2, x1        # x6 = 20 - 10 = 10
0x40110333

// nop; nop; nop; nop; nop; nop
00000013
00000013
00000013
00000013
00000013
00000013
00000013

// I-type ALU Test
// andi x7, x1, 0xF      # x7 = 10 & 0xF = 10 (0xA)
0x00f0f393

// nop; nop; nop; nop; nop; nop
00000013
00000013
00000013
00000013
00000013
00000013
00000013
// slti x8, x2, 15       # x8 = (20 < 15) ? 1 : 0 => 0
0x00f12413

// nop; nop; nop; nop; nop; nop
00000013
00000013
00000013
00000013
00000013
00000013

// U-type Test
// lui x9, 0xABC00       # x9 = 0xABC00000
0xabc004b7

// nop; nop; nop; nop; nop; nop
00000013
00000013
00000013
00000013
// Branch Test
// beq x1, x1, .+8     
0x00108063

// nop; nop; nop; nop; nop; nop
00000013
00000013
00000013
00000013
00000013

// Jump Test 
// jal x11, .+12       # Запись PC+4 в x11. PC для JAL нужно проверить в VCD.
0x000005ef

// nop; nop_end:          # Метка для JAL (не используется напрямую)
00000013
00000013
00000013
00000013
00000013
00000013
00000013
00000013
// nop; nop; nop; nop; nop; nop